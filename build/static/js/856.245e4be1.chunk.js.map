{"version":3,"file":"static/js/856.245e4be1.chunk.js","mappings":"4TAgBe,SAASA,IAEtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAAyBJ,EAAAA,EAAAA,UAAS,IAAG,eAA9BK,EAAK,KAACC,EAAQ,KAGfC,EAAI,yCAAG,WAAOC,GAAC,wFAMoD,OALvEA,EAAEC,iBAAiB,SAIXC,GAAkBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,QACjCC,GAAYC,EAAAA,EAAAA,IAAMJ,GAAiBK,EAAAA,EAAAA,IAAM,QAAS,KAAMd,IAAQ,EAAD,QAEzCe,EAAAA,EAAAA,IAAQH,GAAW,KAAD,EAA3B,KAAbI,EAAa,QAEDC,MAAM,CAAD,gBACM,OAA3BZ,EAAS,kBAAkB,2BAKvBa,EAAUF,EAAcG,KAAK,IAC7BC,EAAWF,EAAQG,QAEZC,WAAapB,GAExBG,EAAS,IACHkB,EAAQ,CAAEC,KAAMJ,EAASI,KAAM1B,OAAO,EAAM2B,MAAOL,EAASK,OAE5DC,EAAcC,KAAKC,UAAUL,GAGnCM,aAAaC,QAAQ,QAASJ,GAE9BK,OAAOC,SAASC,UAGhB5B,EAAS,oBACV,kDAEDA,EAAS,+BACT6B,QAAQ9B,MAAM,EAAD,IAAM,0DAEtB,gBAtCS,sCAwCV,OACE,SAAC,KAAe,WACd,iBAAM+B,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,UAAW,SAAS,UACjG,UAAC,IAAK,CACJC,GAAI,CACFC,MAAO,IACPC,GAAI,OACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJT,QAAS,OACTU,cAAe,SACfC,IAAK,EACLC,aAAc,KACdC,UAAW,MAEbC,QAAQ,WAAU,WAElB,4BACE,SAAC,KAAU,CAACf,MAAO,CAACgB,UAAW,UAAWC,MAAM,KAAKC,UAAU,KAAI,UACjE,UAAC,KAAI,CAACC,GAAG,IAAG,gBAAG,mCAAe,UAEhC,SAAC,KAAU,CAACnB,MAAO,CAACgB,UAAW,UAAWC,MAAM,KAAKC,UAAU,KAAI,UAC/D,uCAEJ,SAAC,KAAU,CAACD,MAAM,UAAS,mCAC3B,SAAC,KAAU,CAACA,MAAM,UAAUjB,MAAO,CAACoB,MAAM,OAAO,SAAEnD,GAAgB,WAErE,UAAC,IAAW,YACV,SAAC,IAAS,qBACV,SAAC,KACC,CACAoD,KAAK,QACLC,KAAK,QACLC,YAAY,oBACZC,SAAU,SAACpD,GAAON,EAASM,EAAEqD,OAAOC,MAAM,QAG9C,UAAC,IAAW,YACV,SAAC,IAAS,wBACV,SAAC,KACC,CACAL,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,SAAU,SAACpD,GAAOJ,EAAYI,EAAEqD,OAAOC,MAAM,QAKjD,SAAC,IAAM,CAACC,QAASxD,EAAMkC,GAAI,CAAEuB,GAAI,GAAqB,0BAMhE,C,sHCxGMC,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKX7D,GAAK8D,EAAAA,EAAAA,IAAaT,GAClBU,GAAUC,EAAAA,EAAAA,IAAWX,IACRY,EAAAA,EAAAA,IAAIF,EAAS,S","sources":["Admin/Login.jsx","config/Firebase.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { CssVarsProvider, useColorScheme } from '@mui/joy/styles';\r\nimport Sheet from '@mui/joy/Sheet';\r\nimport Typography from '@mui/joy/Typography';\r\nimport FormControl from '@mui/joy/FormControl';\r\nimport FormLabel from '@mui/joy/FormLabel';\r\nimport Input from '@mui/joy/Input';\r\nimport Button from '@mui/joy/Button';\r\nimport { db } from '../config/Firebase'\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\n\r\nimport { Redirect , Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error,setError] = useState('');\r\n\r\n \r\n  const auth = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Query the 'User' collection to find a matching document\r\n      const usersCollection = collection(db, 'User');\r\n      const userQuery = query(usersCollection, where('Email', '==', email));\r\n\r\n      const querySnapshot = await getDocs(userQuery);\r\n\r\n      if (querySnapshot.empty) {\r\n        setError('User not found');\r\n        return;\r\n      }\r\n\r\n      // Assuming there's only one user with the given email\r\n      const userDoc = querySnapshot.docs[0];\r\n      const userData = userDoc.data();\r\n      // Check if the password matches\r\n      if (userData.Password === password) {\r\n       \r\n        setError('');\r\n        const token = { Role: userData.Role, Login: true, Email: userData.Email }\r\n        // / Convert the token object to a JSON string\r\n        const tokenString = JSON.stringify(token);\r\n        \r\n        // Store the JSON string in localStorage\r\n        localStorage.setItem('token', tokenString);      \r\n        \r\n        window.location.reload();\r\n        // console.log(\"login successfully !!!!\",token)\r\n      } else {\r\n        setError('Invalid password');\r\n      }\r\n    } catch (err) {\r\n      setError('Error during authentication');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CssVarsProvider>\r\n      <main style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", minHeight: \"100vh\"}}>\r\n        <Sheet\r\n          sx={{\r\n            width: 400,\r\n            mx: 'auto', // margin left & right\r\n            my: 4, // margin top & bottom\r\n            py: 3, // padding top & bottom\r\n            px: 2, // padding left & right\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: 2,\r\n            borderRadius: 'sm',\r\n            boxShadow: 'md',\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          <div>\r\n            <Typography style={{textAlign: \"center\"}} level=\"h2\" component=\"h1\">\r\n              <Link to=\"/\">  <b >Reflect</b> </Link>\r\n            </Typography>\r\n            <Typography style={{textAlign: \"center\"}} level=\"h4\" component=\"h1\">\r\n                <b>Welcome!</b>\r\n            </Typography>\r\n            <Typography level=\"body-sm\">Sign in to continue.</Typography>\r\n            <Typography level=\"body-sm\" style={{color:\"red\"}}>{error ? error : null }</Typography>\r\n          </div>\r\n          <FormControl>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              // html input attribute\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"johndoe@email.com\"\r\n              onChange={(e) => {setEmail(e.target.value)}}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormLabel>Password</FormLabel>\r\n            <Input\r\n              // html input attribute\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              onChange={(e) => {setPassword(e.target.value)}}\r\n\r\n            />\r\n          </FormControl>\r\n\r\n          <Button onClick={auth} sx={{ mt: 1 /* margin top */ }}>Log in</Button>\r\n          \r\n        </Sheet>\r\n      </main>\r\n    </CssVarsProvider>\r\n  );\r\n}","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage, ref, getDownloadURL, uploadBytes } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDrNDJBgI6BTQlnt9xxZzIWXLvIOXeDBnc\",\r\n  authDomain: \"reflect-6315a.firebaseapp.com\",\r\n  projectId: \"reflect-6315a\",\r\n  storageBucket: \"reflect-6315a.appspot.com\",\r\n  messagingSenderId: \"170172540537\",\r\n  appId: \"1:170172540537:web:686cacb1746b42607696a8\",\r\n  measurementId: \"G-3LQQN81LJN\"\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\nconst storageRef = ref(storage, 'images');\r\n\r\nexport { app, db, storage, storageRef, ref, getDownloadURL, uploadBytes };\r\n"],"names":["Login","useState","email","setEmail","password","setPassword","error","setError","auth","e","preventDefault","usersCollection","collection","db","userQuery","query","where","getDocs","querySnapshot","empty","userDoc","docs","userData","data","Password","token","Role","Email","tokenString","JSON","stringify","localStorage","setItem","window","location","reload","console","style","display","justifyContent","alignItems","minHeight","sx","width","mx","my","py","px","flexDirection","gap","borderRadius","boxShadow","variant","textAlign","level","component","to","color","name","type","placeholder","onChange","target","value","onClick","mt","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","storage","getStorage","ref"],"sourceRoot":""}