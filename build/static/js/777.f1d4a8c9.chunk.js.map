{"version":3,"file":"static/js/777.f1d4a8c9.chunk.js","mappings":"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","sources":["Admin/Admin.jsx","config/Firebase.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Tabs from '@mui/joy/Tabs';\r\nimport TabList from '@mui/joy/TabList';\r\nimport Tab from '@mui/joy/Tab';\r\nimport TabPanel from '@mui/joy/TabPanel';\r\nimport { storage, db, storageRef } from '../config/Firebase'\r\nimport { collection, addDoc, getDocs, deleteDoc, updateDoc , doc, onSnapshot  } from 'firebase/firestore';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { Button } from '@mui/material';\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport YoutubePlayer from 'react-youtube-player';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { upload } from '@testing-library/user-event/dist/upload';\r\n \r\n\r\nexport default function Admin() {\r\n\r\n  //bookings\r\n\r\n  const [beforeImage, setBeforeImage] = useState(null);\r\n  const [afterImage, setAfterImage] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [items, setItems] = useState([]);\r\n\r\n\r\n  //appointment\r\n  const [formData, setFormData] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState('All');\r\n  const [filterbystatus,setFilterbyStatus] = useState(\"NEW\");\r\n  const [filteredDocuments, setFilteredDocuments] = useState([]);\r\n\r\n  // Offers\r\n  const [contentType,setContentType]= useState(null);\r\n  const [offersource,setOfferSource] = useState(null);\r\n  const [Text,setText] = useState(\"\");\r\n  const [image,setImage] = useState(null);\r\n  const [videoLink,setVideoLink] = useState(null);\r\n  const [Offers,setOffers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let timeDifference ;\r\n    // Convert the selected filter to milliseconds\r\n    if(selectedFilter === 'All')\r\n       timeDifference = 'All'\r\n    if(selectedFilter === 'Today')\r\n       timeDifference = 1 * 24 * 60 * 60 * 1000   \r\n    if(selectedFilter === 'last2Days')\r\n       timeDifference = 2 * 24 * 60 * 60 * 1000   \r\n    if(selectedFilter === 'last7Days')\r\n       timeDifference = 7 * 24 * 60 * 60 * 1000 \r\n    if(selectedFilter === 'last30Days')\r\n       timeDifference = 30 * 24 * 60 * 60 * 1000 \r\n    if(selectedFilter === 'last60Days')\r\n       timeDifference = 60 * 24 * 60 * 60 * 1000 \r\n       console.log(\"filterby status\");\r\n      \r\n    // Get the current date\r\n    const currentDate = new Date();\r\n let filterstauts ;\r\n if(filterbystatus === \"ALL\")\r\n      filterstauts = formData;\r\n  else\r\n      filterstauts = formData.filter((docu)=>{\r\n            if(filterbystatus === docu.status){\r\n              console.log(\"NEW\");\r\n              return true ;              \r\n            }\r\n            if(filterbystatus === docu.status){ \r\n              console.log(\"Closed\");\r\n              return true ;              \r\n            }\r\n     })\r\n     let  filteredDocs ;\r\n     if(timeDifference === \"All\") \r\n     filteredDocs = filterstauts ;    \r\n     else\r\n     filteredDocs = filterstauts.filter(({ timestamp }) => {\r\n      const timestampMilliseconds = timestamp.seconds * 1000 + timestamp.nanoseconds / 1e6;\r\n      return currentDate - timestampMilliseconds <= timeDifference;\r\n    });\r\n     \r\n    // Update the state with the filtered documents\r\n    setFilteredDocuments(filteredDocs);\r\n  }, [formData, selectedFilter , filterbystatus]);\r\n\r\n  useEffect(() => {    \r\n    const fetchData = async () => {\r\n      const formDataCollection = collection(db, 'formData');\r\n      const unsubscribe = onSnapshot(formDataCollection, (snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setFormData(data);\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // console.log(\"form data\",filterbystatus)\r\n\r\n  \r\n \r\n  const handleBeforeImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setBeforeImage(e.target.files[0]);\r\n    }\r\n  };\r\n  const handleAfterImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setAfterImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Upload the image to Firebase Storage\r\n      const BeforeimageUrl = await uploadImage(beforeImage);\r\n      const AfterimageUrl = await uploadImage(afterImage);\r\n      // Add the document to Firestore\r\n      await addDataToFirestore(BeforeimageUrl , AfterimageUrl);\r\n      // Reset form fields\r\n      setBeforeImage(null);\r\n      setAfterImage(null);\r\n      setTitle('');\r\n    } catch (error) {\r\n      console.error('Error adding item to Firestore: ', error);\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (Image) => {\r\n    const imageRef = ref(storage, `images/${Image.name}`);\r\n    await uploadBytes(imageRef, Image);\r\n\r\n    // Get the download URL for the image\r\n    const imageUrl = await getDownloadURL(imageRef);\r\n    return imageUrl;\r\n  };\r\n\r\n  const addDataToFirestore = async (beforeimageUrl,afterimageurl) => {\r\n    // Add your Firestore document creation logic here\r\n    // Use the db object from firebase.js\r\n    // For example:\r\n    const itemsRef = collection(db, 'items');\r\n    await addDoc(itemsRef, { beforeimage: beforeimageUrl,afterimage:afterimageurl, title });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const itemsCollection = collection(db, 'items');\r\n        const itemsSnapshot = await getDocs(itemsCollection);\r\n        const itemsData = itemsSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setItems(itemsData);\r\n      } catch (error) {\r\n        console.error('Error fetching data from Firestore: ', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    offerFetchData()\r\n  }, []); \r\n\r\n  const offerFetchData = ()=>{\r\n    const fetchData = async () => {\r\n      try {\r\n        const itemsCollection = collection(db, 'Offers');\r\n        const itemsSnapshot = await getDocs(itemsCollection);\r\n        const itemsData = itemsSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n         console.log(\"items data\",itemsData);\r\n        setOffers(itemsData);\r\n      } catch (error) {\r\n        console.error('Error fetching data from Firestore: ', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }\r\n\r\n  const handlerUpdateOfferStatus = async (itemId,status)=>{\r\n    const itemDocRef = doc(db, 'Offers', itemId);\r\n    await updateDoc(itemDocRef, {\r\n      status: status\r\n  });\r\n  offerFetchData();\r\n  // setFilteredDocuments((prevItems) => prevItems.filter((item) => item.id !== itemId));\r\n\r\n  }\r\n  const handleOfferDelete = async (itemId) => {\r\n    try {\r\n      const itemDocRef = doc(db, 'Offers', itemId);\r\n      await deleteDoc(itemDocRef);\r\n      setItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\r\n      offerFetchData();\r\n      \r\n    } catch (error) {\r\n      console.error('Error deleting item from Firestore: ', error);\r\n    }\r\n  };\r\n\r\n  const handlerUpdateStatus = async (itemId)=>{\r\n    const itemDocRef = doc(db, 'formData', itemId);\r\n    await updateDoc(itemDocRef, {\r\n      status: \"CLOSED\"\r\n  });\r\n  setFilteredDocuments((prevItems) => prevItems.filter((item) => item.id !== itemId));\r\n\r\n  }\r\n  const handleDelete = async (itemId) => {\r\n    try {\r\n      const itemDocRef = doc(db, 'items', itemId);\r\n      await deleteDoc(itemDocRef);\r\n      setItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\r\n    } catch (error) {\r\n      console.error('Error deleting item from Firestore: ', error);\r\n    }\r\n  };\r\n\r\n  const LogoutHandler = ()=>{\r\n    // console.log(\"logout handler !!!!\");\r\n       localStorage.removeItem('token'); \r\n       window.location.reload(); \r\n  } \r\n\r\n  const statusfilterhandler = (value)=>{\r\n    setFilterbyStatus(value)\r\n    setSelectedFilter('All')\r\n  }\r\n\r\n    // console.log(\"filter by status \",filterbystatus);\r\n\r\n\r\n  const ExtractyoutubevideoIDHandler = (value)=>{\r\n    let youtubeUrl = value;\r\n    const match = youtubeUrl.match(/[?&]v=([^&]+)/); \r\n    let videoID =  match && match[1];\r\n    if(videoID){\r\n      setOfferSource(videoID);\r\n    }\r\n  }\r\n\r\n  const OfferCreateHandle = async ()=>{\r\n    let data = {\r\n         offerSource:offersource,\r\n         contentType:contentType,\r\n         Text:Text,\r\n         status:\"CLOSED\"\r\n    };\r\n    // console.log(\"data\",data);\r\n    const itemsRef = collection(db, 'Offers');\r\n    await addDoc(itemsRef, data);\r\n    offerFetchData();\r\n\r\n  }\r\n\r\n  const handleimageoffer = async ()=>{\r\n     let imageUrl = await uploadImage(image);\r\n     setOfferSource(imageUrl);\r\n  }\r\n  \r\n  useEffect( ()=>{\r\n        if(contentType === \"video\"){\r\n          ExtractyoutubevideoIDHandler(videoLink);\r\n        }\r\n        else{\r\n          handleimageoffer()\r\n         \r\n        }\r\n  },[videoLink , image])\r\n  \r\n\r\n\r\n  return (\r\n    <Tabs aria-label=\"Basic tabs\" defaultValue={0}>\r\n    <TabList>\r\n        <Tab>Bookings</Tab>\r\n        <Tab>Results</Tab>\r\n        {/* <Tab >Offers</Tab> */}\r\n        <Tab >Logout</Tab>\r\n    </TabList>\r\n\r\n\r\n    <TabPanel value={0}>\r\n    <Tabs aria-label=\"Basic tabs\" defaultValue={0}>\r\n    <TabList >\r\n       <div onClick={(e)=>{statusfilterhandler(\"NEW\")}}><Tab>New</Tab></div> \r\n        <div onClick={(e)=>{statusfilterhandler(\"CLOSED\")}}><Tab >Closed Appointment</Tab></div>\r\n        <div onClick={(e)=>{statusfilterhandler(\"ALL\")}} ><Tab >All</Tab></div>\r\n    </TabList>\r\n    <TabPanel value={0}>\r\n    </TabPanel>\r\n    <TabPanel value={1}>\r\n    <label>\r\n        <select\r\n          value={selectedFilter}\r\n          onChange={(e) => setSelectedFilter(e.target.value)}\r\n        >\r\n          <option value=\"All\">All</option>          \r\n          <option value=\"Today\">Today</option>      \r\n          <option value=\"last2Days\">Last 2 days</option>          \r\n          <option value=\"last7Days\">Last 7 days</option>\r\n          <option value=\"last30Days\">Last 30 days</option>\r\n          <option value=\"last60Days\">Last 60 days</option>\r\n        </select>\r\n      </label>\r\n    </TabPanel>\r\n    <TabPanel value={2}>\r\n    <label>\r\n       \r\n        <select\r\n          value={selectedFilter}\r\n          onChange={(e) => setSelectedFilter(e.target.value)}\r\n        >\r\n          <option value=\"All\">All</option>          \r\n          <option value=\"Today\">Today</option>      \r\n          <option value=\"last2Days\">Last 2 days</option>\r\n          <option value=\"last7Days\">Last 7 days</option>\r\n          <option value=\"last30Days\">Last 30 days</option>\r\n          <option value=\"last60Days\">Last 60 days</option>\r\n        </select>\r\n      </label>\r\n    \r\n    </TabPanel>\r\n    </Tabs>\r\n         \r\n        <div className='bookcard-grid'>\r\n        {filteredDocuments.length > 0 ? filteredDocuments.map((data) => (\r\n          \r\n                <div className=\"book-card\" key={data.id}>\r\n                    <div><strong>Name:</strong> {data.name}</div>\r\n                    <div> <strong>Phone Number:</strong> {data.phoneNumber} </div>\r\n                    <div><strong>Time Slot:</strong> {data.timeSlot}</div>\r\n                    <div> <strong>Submission time:</strong> {data.timestamp && data.timestamp.toDate().toString()}</div>\r\n                   {data.status === \"NEW\" && <div><button style={{backgroundColor:\"orange\",padding:\"5px 5px 7px 5px \",color:\"white\",marginTop:\"10px\",borderRadius:\"7px\"}} onClick={()=>handlerUpdateStatus(data.id)}>Close Appointment</button></div> }\r\n                </div>\r\n          \r\n            ))\r\n            :\r\n            <div className='text-center' style={{marginTop:\"20px\"}}>Data Not Available </div>\r\n          }\r\n            \r\n        </div>\r\n\r\n    </TabPanel>\r\n\r\n\r\n    <TabPanel value={1}>\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Before Image:\r\n        <input type=\"file\" onChange={handleBeforeImageChange} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        After Image:\r\n        <input type=\"file\" onChange={handleAfterImageChange} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Title:\r\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n      </label>\r\n      <br />\r\n      <Button type=\"submit\" color='success' style={{margin:\"20px\"}}>Add Item</Button>\r\n    </form>\r\n    <div className='bookcard-grid'>\r\n        {items.map((item) => (\r\n          <div className='book-card'  key={item.id}>\r\n            <div>\r\n            <img src={item.beforeimage}  alt={item.title}  />\r\n            <img src={item.afterimage}  alt={item.title}  />\r\n            </div>\r\n            <p>{item.title}</p>\r\n            <Button variant='contained' color='error' style={{margin: \"20px\"}} onClick={() => handleDelete(item.id)}>Delete</Button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n       \r\n    </TabPanel>\r\n\r\n    {/* <TabPanel value={2}>\r\n    <Tabs aria-label=\"Basic tabs\" defaultValue={0}>\r\n    <TabList>\r\n        <Tab>Create Offers</Tab>\r\n        <Tab>Offers List</Tab>\r\n       \r\n    </TabList>\r\n    <TabPanel value={0}>\r\n    <div className='text-2xl p-5'>Create Offers</div>\r\n\r\n<div className='px-5'>\r\n  <div>\r\n    Enter Text\r\n  </div>\r\n  <div className='mb-5'>\r\n    <input type=\"text\" onChange={(e)=>setText(e.target.value)} />\r\n  </div>\r\n  <div>\r\n    Select Content Type is Video Or image\r\n  </div>\r\n  <div>\r\n     <div><input type=\"radio\" name=\"content\" onChange={()=>{setContentType(\"image\")}} /> Image</div>\r\n     <div><input type=\"radio\" name=\"content\" onChange={()=>{setContentType(\"video\")}} /> Video</div>\r\n  </div>\r\n  \r\n  {\r\n    contentType === \"video\" || contentType === \"image\" ?\r\n  <div>\r\n  {\r\n    contentType === \"image\"  ?        \r\n  <div style={{padding:\"10px 0px 10px 0px\"}}>\r\n     Uplaod Image<br/><br/>\r\n      <label htmlFor=\"image\" >\r\n       <span className='flex items-center justify-center' style={{ border:\"2px solid gray \",width:\"200px\",borderRadius:\"20px\"}}><FaCloudUploadAlt /> Upload file</span>\r\n      </label>\r\n      <input id=\"image\" type=\"file\" style={{display:\"none\"}} onChange={(e)=>setImage(e.target.files[0])} />\r\n  </div>\r\n  :\r\n  <div style={{padding:\"10px 0px 10px 0px\"}}>           \r\n      <label htmlFor=\"video\" style={{margin:\"10px 0px 10px 0px\"}} >\r\n      Enter Video Link\r\n      </label>\r\n      <input id=\"video\" type=\"text\" onChange={(e)=>setVideoLink(e.target.value)} />\r\n      {\r\n    videoLink ?        \r\n       <Card style={{boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\"}} className='m-auto' sx={{ maxWidth: 345 }}>\r\n              <CardMedia\r\n                  sx={{ height: 240 }}\r\n                  // image={img}\r\n                  title=\"green iguana\"\r\n              >\r\n                <YoutubePlayer\r\n              videoId={offersource}\r\n              playbackState='unstarted'\r\n              height='100%'\r\n              width='100%'\r\n              configuration={\r\n                  {\r\n                      showinfo: 1,\r\n                      controls: 1\r\n                  }\r\n              }\r\n          />\r\n              </CardMedia>\r\n             \r\n              \r\n          </Card>\r\n          :\r\n          null\r\n  }\r\n  </div>\r\n  }\r\n  </div>\r\n  :\r\n  null\r\n}\r\n  \r\n \r\n {offersource && Text && contentType ?\r\n   <div style={{margin:\"10px 0px 10px 0px\"}}>\r\n   <button style={{backgroundColor:\"green\",color:'white',fontWeight:\"bold\",padding:\"5px\",borderRadius:'10px'}}\r\n    onClick={()=>OfferCreateHandle()}>Confirm</button>\r\n </div>\r\n :\r\n null\r\n } \r\n</div>\r\n    </TabPanel>\r\n    <TabPanel value={1}>\r\n    <div className='bookcard-grid'>\r\n        {Offers.map((item) => (\r\n         <div className=\"book-card\" key={item.id}>\r\n            <div>\r\n            {\r\n              item.contentType === \"image\" ?\r\n            \r\n             <img src={item.offerSource}  alt={item.title}  />            \r\n            :\r\n             <Card style={{boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\"}} className='m-auto' sx={{ maxWidth: 345 }}>\r\n                    <CardMedia\r\n                        sx={{ height: 240 }}\r\n                        // image={img}\r\n                        title=\"green iguana\"\r\n                    >\r\n                      <YoutubePlayer\r\n                    videoId={item.offerSource}\r\n                    playbackState='unstarted'\r\n                    height='100%'\r\n                    width='100%'\r\n                    configuration={\r\n                        {\r\n                            showinfo: 1,\r\n                            controls: 1\r\n                        }\r\n                    }\r\n                />\r\n                    </CardMedia>\r\n                   \r\n                    \r\n                </Card>\r\n            }\r\n            </div>\r\n            <p>{item.Text}</p>\r\n            <div className='flex '>\r\n            <Button variant='contained' color='error' style={{margin: \"20px\"}} onClick={() => handleOfferDelete(item.id)}>Delete</Button>\r\n            {item.status === \"OPEN\" ?<Button variant='contained' style={{margin: \"20px\",backgroundColor:'green'}} onClick={() => handlerUpdateOfferStatus(item.id ,\"CLOSED\")}>Able</Button> : <Button variant='contained' color='error' style={{margin: \"20px\",backgroundColor:'orange'}} onClick={() => handlerUpdateOfferStatus(item.id,\"OPEN\")}>Disable</Button>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </TabPanel>\r\n    </Tabs>\r\n      \r\n    \r\n          \r\n    </TabPanel > */}\r\n\r\n    <TabPanel value={2}>\r\n        <div>\r\n          <div>Finish My Session Now </div>\r\n          <div><Button variant='contained' color='error' onClick={LogoutHandler}>Logout</Button></div>\r\n           \r\n\r\n        </div>\r\n    </TabPanel>\r\n\r\n\r\n    \r\n    </Tabs>\r\n  )\r\n}\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage, ref, getDownloadURL, uploadBytes } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDrNDJBgI6BTQlnt9xxZzIWXLvIOXeDBnc\",\r\n  authDomain: \"reflect-6315a.firebaseapp.com\",\r\n  projectId: \"reflect-6315a\",\r\n  storageBucket: \"reflect-6315a.appspot.com\",\r\n  messagingSenderId: \"170172540537\",\r\n  appId: \"1:170172540537:web:686cacb1746b42607696a8\",\r\n  measurementId: \"G-3LQQN81LJN\"\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\nconst storageRef = ref(storage, 'images');\r\n\r\nexport { app, db, storage, storageRef, ref, getDownloadURL, uploadBytes };\r\n"],"names":["Admin","useState","beforeImage","setBeforeImage","afterImage","setAfterImage","title","setTitle","items","setItems","formData","setFormData","selectedFilter","setSelectedFilter","filterbystatus","setFilterbyStatus","filteredDocuments","setFilteredDocuments","contentType","setOfferSource","image","videoLink","setOffers","useEffect","timeDifference","console","log","filterstauts","filteredDocs","currentDate","Date","filter","docu","status","timestamp","timestampMilliseconds","seconds","nanoseconds","fetchData","formDataCollection","collection","db","unsubscribe","onSnapshot","snapshot","data","docs","map","doc","id","handleSubmit","e","preventDefault","uploadImage","BeforeimageUrl","AfterimageUrl","addDataToFirestore","error","Image","imageRef","ref","storage","name","uploadBytes","getDownloadURL","imageUrl","beforeimageUrl","afterimageurl","itemsRef","addDoc","beforeimage","afterimage","itemsCollection","getDocs","itemsSnapshot","itemsData","offerFetchData","handlerUpdateStatus","itemId","itemDocRef","updateDoc","prevItems","item","handleDelete","deleteDoc","statusfilterhandler","value","handleimageoffer","match","videoID","ExtractyoutubevideoIDHandler","defaultValue","onClick","onChange","target","className","length","phoneNumber","timeSlot","toDate","toString","style","backgroundColor","padding","color","marginTop","borderRadius","onSubmit","type","files","margin","src","alt","variant","localStorage","removeItem","window","location","reload","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getStorage"],"sourceRoot":""}